!
!/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
!
!              VISCOUS WALL BC
!              ---------------
!/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
!
      subroutine ViscousWall_Associate(self , edge)
         implicit none
         class(ViscousWall_t)          :: self
         class(Edge_t)                 :: edge
         integer                       :: i

         associate ( N => edge % spA % N )

         select type ( edge )
         
            type is (Edge_t)
               print*, "Only boundary edges are expected."
               stop "Stopped"
      
            type is (StraightBdryEdge_t)
               allocate( edge % uB(0:N,NCONS) )
               allocate( edge % gB(0:N,NCONS,NDIM) )   ! Normal gradients
   
            type is (CurvedBdryEdge_t)
               allocate( edge % uB(0:N,NCONS) )
               allocate( edge % gB(0:N,NCONS,NDIM) )

         end select
         end associate
      end subroutine ViscousWall_Associate

      subroutine ViscousWall_Update( self , edge )
         implicit none  
         class(ViscousWall_t)                  :: self
         class(Edge_t)                       :: edge
!
!        ***************************************************
!           For each edge the ghost cell state is computed as
!              UB(IRHO) = Q(IRHO)
!              UB(IRHOU) = -Q(IRHOU)
!              UB(IRHOV) = -Q(IRHOV)
!              UB(IRHOE) = Q(IRHOE)
!        ***************************************************
!
         associate( N => edge % spA % N , gm1 => Thermodynamics % gm1 , gamma => Thermodynamics % gamma , Mach => Dimensionless % Mach )
   
         select type ( edge ) 
            type is (StraightBdryEdge_t)
   
               edge % uB(0 : N , IRHO)  =  edge % Q(0 : N , IRHO  , 1)
               edge % uB(0 : N , IRHOU) = -edge % Q(0 : N , IRHOU , 1)
               edge % uB(0 : N , IRHOV) = -edge % Q(0 : N , IRHOV , 1)
               edge % uB(0 : N , IRHOE) =  edge % Q(0 : N , IRHOE , 1)

            type is (CurvedBdryEdge_t)

               edge % uB(0 : N , IRHO)  =  edge % Q(0 : N , IRHO  , 1)
               edge % uB(0 : N , IRHOU) = -edge % Q(0 : N , IRHOU , 1)
               edge % uB(0 : N , IRHOV) = -edge % Q(0 : N , IRHOV , 1)
               edge % uB(0 : N , IRHOE) =  edge % Q(0 : N , IRHOE , 1)
      
            class default
         end select

         end associate

      end subroutine ViscousWall_Update

