   subroutine QuadElement_SetMappings ( self ) 
      use MatrixOperations
      implicit none
      class(QuadElement_t)          :: self 
      integer                       :: ixi , ieta
!
!     **************************************
!     Set the mapping for the inner points X
!        Also, compute dX, the derivatives
!     **************************************
!
      associate ( N => self % spA % N , xi => self % spA % xi , eta => self % spA % xi , &
                  gBOT => self % edges(EBOTTOM) % f , & 
                  gTOP => self % edges(ETOP) % f  , & 
                  gLEFT => self % edges(ELEFT) % f , & 
                  gRIGHT => self % edges(ERIGHT) % f , & 
                  dBOT => self % edgesDirection(EBOTTOM) , &
                  dTOP => self % edgesDirection(ETOP) , & 
                  dLEFT => self % edgesDirection(ELEFT) , & 
                  dRIGHT => self % edgesDirection(ERIGHT) , & 
                  n1 => self % nodes(1) % n % X , n2 => self % nodes(2) % n % X , n3 => self % nodes(3) % n % X , n4 => self % nodes(4) % n % X ) 

         do ixi = 0 , N
            do ieta = 0 , N 
               
               self % x(iX:iY, ixi , ieta) =  (1.0_RP - eta(iEta)) * gBOT % getX(iXi,dBOT) + xi(iXi)*gRIGHT % getX(iEta,dRIGHT) + &
                                              (1.0_RP - xi(iXi) )  * gLEFT % getX(iEta,-dLEFT) + eta(iEta)*gTOP % getX(iXi,-dTOP)  &
                                              -n1*(1.0_RP - xi(iXi))*(1.0_RP - eta(iEta)) - n2 * xi(iXi) * (1.0_RP - eta(iEta)) & 
                                              -n3* xi(iXi) * eta(iEta) - n4 * (1.0_RP - xi(iXi)) * eta(iEta)
      
               self % dxiX(iX:iY, ixi , ieta) = (1.0_RP - eta(iEta)) * gBOT % getdX(iXi,dBOT) + gRIGHT % getX(iEta,dRIGHT) + &
                                                   eta(iEta) * gTOP % getdX(iXi,-dTOP) + (-1.0_RP) * gLEFT % getX(iEta,-dLEFT) + &
                                              -n1 *(1.0_RP - eta(iEta))*(-1.0_RP) - n2 * (1.0_RP - eta(iEta)) & 
                                              -n3 * eta(iEta) - n4 * (-1.0_RP) * eta(iEta)

               self % detaX(iX:iY, ixi , ieta) =  (-1.0_RP) * gBOT % getX(iXi,dBOT) + xi(iXi)*gRIGHT % getdX(iEta,dRIGHT) + &
                                              (1.0_RP - xi(iXi) )  * gLEFT % getdX(iEta,-dLEFT) + gTOP % getX(iXi,-dTOP)  &
                                              -n1*(1.0_RP - xi(iXi))*(-1.0_RP) - n2 * xi(iXi) * (-1.0_RP) & 
                                              -n3* xi(iXi) - n4 * (1.0_RP - xi(iXi))
            end do
         end do

      end associate

      self % dx(:,:,:,iX) = MatrixMultiplyInIndex_F( self % x , transpose(self % spA % D) , 2)
      self % dx(:,:,:,iY) = MatrixMultiplyInIndex_F( self % x , transpose(self % spA % D) , 3)

   end subroutine QuadElement_SetMappings


